<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbresim.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a2t/AZ0+a291Pdt6AAAAAElFTkSuQmCC
</value>
  </data>
</root>